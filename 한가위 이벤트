<!doctype html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>2주 매출 목표 대시보드</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    :root { --bg:#0b1020; --muted:#8ea2c6; --text:#eef2ff; --radius:16px; --shadow:0 12px 30px rgba(0,0,0,.35); }
    *{box-sizing:border-box}
    body{margin:0;padding:24px;font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,'Helvetica Neue',Arial;background:radial-gradient(1200px 600px at 80% -10%, rgba(106,166,255,.15), transparent), var(--bg);color:var(--text)}
    .wrap{max-width:1120px;margin:0 auto}
    header{display:flex;align-items:center;justify-content:space-between;gap:16px;margin-bottom:16px}
    h1{font-size:clamp(22px,3vw,28px);margin:0}
    .card{background:linear-gradient(180deg,rgba(255,255,255,.02),rgba(255,255,255,.01));border:1px solid rgba(255,255,255,.06);border-radius:var(--radius);box-shadow:var(--shadow)}
    .toolbar{display:flex;flex-wrap:wrap;gap:12px;padding:16px;align-items:end}
    .field{display:flex;flex-direction:column;gap:6px}
    .field label{color:var(--muted);font-size:12px}
    input,button{background:#0f1526;color:var(--text);border:1px solid rgba(255,255,255,.08);border-radius:10px;padding:10px 12px;font-size:14px;outline:none}
    button.primary{background:linear-gradient(180deg,#1f4eff,#1236d3);border:none;cursor:pointer}
    .grid{display:grid;grid-template-columns:1.5fr 1fr;gap:16px;margin:16px 0}
    @media (max-width:980px){.grid{grid-template-columns:1fr}}
    .kpis{display:grid;grid-template-columns:repeat(5,1fr);gap:12px;padding:16px}
    @media (max-width:980px){.kpis{grid-template-columns:repeat(2,1fr)}}
    .kpi{padding:14px;border-radius:14px;background:#0f1628;border:1px solid rgba(255,255,255,.06)}
    .kpi h3{margin:0 0 6px;font-size:12px;color:var(--muted);font-weight:600}
    .kpi .v{font-size:20px;font-weight:700}
    .table{padding:12px;overflow:auto}
    table{width:100%;border-collapse:collapse;font-size:14px}
    th,td{text-align:right;padding:10px 8px;border-bottom:1px solid rgba(255,255,255,.06)}
    th{color:var(--muted);font-weight:600;position:sticky;top:0;background:#0f1628}
    td:first-child,th:first-child{text-align:center}
    td:nth-child(2),th:nth-child(2){text-align:center}
    td:nth-child(3),th:nth-child(3){text-align:center}
    .progress{height:10px;background:#0f1628;border-radius:999px;overflow:hidden;border:1px solid rgba(255,255,255,.06)}
    .bar{height:100%;width:0;background:linear-gradient(90deg,#2dd4bf,#60a5fa)}
    footer{opacity:.7;font-size:12px;margin-top:12px;text-align:center}
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>📊 2주 매출 목표 대시보드 (요일+일자별 목표 지원)</h1>
      <div style="display:flex; gap:8px; align-items:center">
        <button class="ghost" id="btnExport">데이터 내보내기</button>
        <input type="file" id="fileImport" accept="application/json" style="display:none" />
        <button class="ghost" id="btnImport">가져오기</button>
        <button id="btnReset">초기화</button>
      </div>
    </header>

    <div class="card toolbar">
      <div class="field">
        <label>🎯 총 목표(2주)</label>
        <input type="number" id="goal" min="0" step="1000" value="0" />
      </div>
      <div class="field">
        <label>📅 시작일</label>
        <input type="date" id="startDate" />
      </div>
      <div class="field">
        <label>기간(일)</label>
        <input type="number" id="days" min="1" max="31" value="14" />
      </div>
      <div class="field">
        <label>&nbsp;</label>
        <button class="primary" id="btnApply">설정 적용</button>
      </div>
      <div class="field">
        <label><input type="checkbox" id="evenDist" checked> 목표 균등 분배</label>
      </div>
    </div>

    <!-- 그래프 상단 배치 -->
    <div class="card" style="margin:16px 0">
      <canvas id="chart" style="padding:16px"></canvas>
    </div>

    <div class="grid">
      <div class="card">
        <div class="kpis">
          <div class="kpi"><h3>총 목표</h3><div class="v" id="kGoal">0</div></div>
          <div class="kpi"><h3>누적 매출</h3><div class="v" id="kSum">0</div></div>
          <div class="kpi"><h3>달성률</h3><div class="v" id="kRate">0%</div></div>
          <div class="kpi"><h3>남은 일수</h3><div class="v" id="kDaysLeft">0</div></div>
          <div class="kpi"><h3>필요 일일 평균</h3><div class="v" id="kNeed">0</div></div>
        </div>
        <div style="padding:0 16px 16px">
          <div class="progress"><div class="bar" id="progressBar"></div></div>
        </div>
      </div>
    </div>

    <div class="card table">
      <table id="tbl">
        <thead>
          <tr>
            <th>일차</th>
            <th>날짜</th>
            <th>요일</th>
            <th>목표(일별)</th>
            <th>실제 매출</th>
            <th>격차(실제-목표)</th>
            <th>누적</th>
            <th>누적 달성률</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>

    <footer>💾 모든 입력은 브라우저 <b>localStorage</b>에 자동 저장됩니다. (삭제/초기화 전까지 유지)</footer>
  </div>

  <script>
    const $$ = (sel) => document.querySelector(sel);
    const pad = (n) => String(n).padStart(2, '0');
    const fmt = (n) => Number(n||0).toLocaleString('ko-KR');
    const pct = (x) => (x*100).toFixed(2) + '%';
    const WEEK = ['일','월','화','수','목','금','토'];

    const KEY = 'sales-2w-dashboard-v2';

    const state = {
      goal: 0,
      startDate: new Date().toISOString().slice(0,10),
      days: 14,
      sales: [],        // 실제 매출(일별)
      dailyTargets: [], // 일자별 목표 (수정 가능)
      evenDist: true    // 목표 균등 분배 여부
    };

    function save(){ localStorage.setItem(KEY, JSON.stringify(state)); }
    function load(){ try{ const s = JSON.parse(localStorage.getItem(KEY)); if(s){ Object.assign(state, s); } }catch(e){} }

    function ensureLengths(){
      if(!Array.isArray(state.sales) || state.sales.length !== Number(state.days)){
        const old = state.sales.slice();
        state.sales = Array.from({length:state.days},(_,i)=> old[i] || 0);
      }
      if(!Array.isArray(state.dailyTargets) || state.dailyTargets.length !== Number(state.days)){
        const old = state.dailyTargets.slice();
        state.dailyTargets = Array.from({length:state.days},(_,i)=> old[i] || 0);
      }
      if(state.evenDist){
        const base = state.goal / state.days || 0;
        state.dailyTargets = Array.from({length:state.days}, ()=> Math.round(base));
      }
    }

    function dayName(d){ return WEEK[d.getDay()]; }

    function buildTable(){
      const tbody = $$('#tbl tbody');
      tbody.innerHTML = '';
      ensureLengths();
      let cum = 0; let cumTarget = 0;
      const start = new Date(state.startDate);

      for(let i=0;i<state.days;i++){
        const tr = document.createElement('tr');
        const d = new Date(start); d.setDate(d.getDate()+i);
        const y = d.getFullYear(), m = pad(d.getMonth()+1), da = pad(d.getDate());
        const dow = dayName(d);

        const target = Number(state.dailyTargets[i]||0);
        const actual = Number(state.sales[i]||0);
        const gap = actual - target;
        cum += actual; cumTarget += target;
        const rate = state.goal>0 ? cum/state.goal : 0;

        tr.innerHTML = `
          <td>${i+1}</td>
          <td>${y}-${m}-${da}</td>
          <td>${dow}</td>
          <td><input type="number" min="0" step="1000" value="${target}" data-kind="target" data-idx="${i}" style="width:120px;text-align:right"></td>
          <td><input type="number" min="0" step="1000" value="${actual}" data-kind="actual" data-idx="${i}" style="width:120px;text-align:right"></td>
          <td>${fmt(gap)}</td>
          <td>${fmt(cum)}</td>
          <td>${pct(rate)}</td>
        `;
        tbody.appendChild(tr);
      }

      tbody.querySelectorAll('input[type="number"]').forEach(inp=>{
        inp.addEventListener('input',()=>{
          const i = Number(inp.dataset.idx);
          const kind = inp.dataset.kind;
          const val = Number(inp.value||0);
          if(kind==='target'){ state.dailyTargets[i] = val; state.evenDist = false; $$('#evenDist').checked = false; }
          else { state.sales[i] = val; }
          save();
          render();
        });
      });
    }

    let chart;
    function buildChart(){
      const ctx = $$('#chart');
      const labels = Array.from({length: state.days}, (_,i)=> i+1);
      // 누적 실제
      const cum = []; let r=0; state.sales.forEach(v=>{ r+=Number(v||0); cum.push(r); });
      // 누적 목표(일별 입력 반영)
      const goalCum = []; let g=0; state.dailyTargets.forEach(v=>{ g+=Number(v||0); goalCum.push(g); });
      // 일별 실제(막대)
      const dailyActual = state.sales.map(v=> Number(v||0));
      // 일별 목표(막대)
      const dailyTarget = state.dailyTargets.map(v=> Number(v||0));

      const data = { labels, datasets:[
        { type:'line', label:'누적 매출', data:cum, borderWidth:2, tension:.25 },
        { type:'line', label:'누적 목표', data:goalCum, borderDash:[6,4], borderWidth:2 },
        { type:'bar', label:'일별 매출', data:dailyActual, order:3 },
        { type:'bar', label:'일별 목표', data:dailyTarget, order:4 }
      ]};

      if(chart){ chart.destroy(); }
      chart = new Chart(ctx, { type:'bar', data, options:{ responsive:true, scales:{ x:{ grid:{color:'rgba(255,255,255,.06)'}}, y:{ grid:{color:'rgba(255,255,255,.06)'}} }, plugins:{ legend:{ labels:{ color:'#c9d4f4' } } } } });
    }

    function renderKPI(){
      const total = state.sales.reduce((a,b)=>a+Number(b||0),0);
      const goal = Number(state.goal||0);
      const ach = goal>0 ? total/goal : 0;

      const today = new Date();
      const start = new Date(state.startDate);
      const elapsed = Math.min(state.days, Math.max(0, Math.floor((today - start)/86400000) + 1));
      const left = Math.max(0, state.days - elapsed);
      const remain = Math.max(0, goal - total);
      const need = left>0 ? Math.ceil(remain/left) : remain;

      $$('#kGoal').textContent = fmt(goal);
      $$('#kSum').textContent = fmt(total);
      $$('#kRate').textContent = pct(ach);
      $$('#kDaysLeft').textContent = left;
      $$('#kNeed').textContent = fmt(need);
      $$('#progressBar').style.width = Math.min(100, ach*100) + '%';
    }

    function applySettings(){
      state.goal = Number($$('#goal').value || 0);
      state.startDate = $$('#startDate').value || new Date().toISOString().slice(0,10);
      const newDays = Number($$('#days').value || 14);
      state.evenDist = $$('#evenDist').checked;
      if(newDays !== state.days){
        const oldSales = state.sales.slice();
        const oldTargets = state.dailyTargets.slice();
        state.days = newDays;
        state.sales = Array.from({length:newDays},(_,i)=> oldSales[i] || 0);
        state.dailyTargets = Array.from({length:newDays},(_,i)=> oldTargets[i] || 0);
      }
      save();
      render();
    }

    function render(){
      ensureLengths();
      $$('#goal').value = state.goal;
      $$('#startDate').value = state.startDate;
      $$('#days').value = state.days;
      $$('#evenDist').checked = !!state.evenDist;

      buildTable();
      buildChart();
      renderKPI();
    }

    // Export/Import/Reset
    $$('#btnExport').addEventListener('click',()=>{
      const blob = new Blob([JSON.stringify(state,null,2)],{type:'application/json'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a'); a.href=url; a.download='sales_dashboard_backup.json'; a.click(); URL.revokeObjectURL(url);
    });
    $$('#btnImport').addEventListener('click',()=> $$('#fileImport').click());
    $$('#fileImport').addEventListener('change',(e)=>{
      const f=e.target.files[0]; if(!f) return; const r=new FileReader();
      r.onload=()=>{ try{ const obj=JSON.parse(r.result); Object.assign(state,obj); save(); render(); }catch(err){ alert('가져오기 실패: JSON 형식 확인'); } };
      r.readAsText(f);
    });
    $$('#btnReset').addEventListener('click',()=>{ if(confirm('모든 데이터를 초기화할까요?')){ localStorage.removeItem(KEY); location.reload(); } });
    $$('#btnApply').addEventListener('click', applySettings);

    // boot
    load(); ensureLengths(); render();
  </script>
</body>
</html>
